# day10

객체지향언어 ( Object Oriented Programming ) ==> OOP라고 줄여 말한다.
	정의]
		클래스를 이용해서 프로그램을 제작하는 언어.
	
	클래스란??
		하나의 목적을 달성하기 위해서 필요한 기능을 모아놓은 프로그램의 가장 기본 단위..
		
	예]
		문자열을 관리한다 : 
		==> String (class)
		
		네트워크를 처리한다.
		==> Socket (Class) - JAVA API 제공
		
		많은 양의 데이터를 한 꺼번에 보관, 관리한다
		==> ArrayList, HashMap, HashSet, ... ==> Collection (Class)
		
	따라서 클래스의 구성요소는
		1. 변수	: 필요한 데이터를 보관하는 목적
		2. 함수	: 무언가를 해결할 기능을 담당한다.
		
		이 두가지를 클래스를 이루는 요소이고
		따라서 이 두가지를 클래스의 멤버라고 이야기한다.
	
클래스 만드는 방법 --
-------------------------------------
	[접근지정자] [속성] class 클래스 이름{	|
		변수선언;						|
									|
		...							|
									|
		함수 선언(){					|
			함수내용					|
		}							|
		...							|
	} 								|
-------------------------------------
	
	**********
	그런데 클래스는 단지 설계도에 불과하다.
	즉, 클래스만 가지고 있다고 해서 이것이 실행되는 것은 아니다.
	반드시 클래스가 실행 가능한 물건으로 탄생이 되어야 한다.
	
	이처럼 클래스는 실행 가능한 물건으로 만드는 것을
			"Object"
	라고 한다.
	
	결론적으로 객체지향언어는 클래스는 기반으로 만들어진 Object에 의해서 만들어지는 프로그램이다.
	
	우리는 이미 부품 설꼐도는 많이 충분히 엄청나게 준비가 되어있다.
	이것을 적절한 위치에 조립해서
	원하는 프로그램을 만들어나가는 기법이
	객체지향프로그램이다..
	라고 이해하면 될 것이다.
	
	객체(Object)는 어떻게 만드는가??
		==> JVM이 만들어준다.
			따라서, 개발자는 필요한 부품을 만들어 달라고 명령만 내리면 된다.
			
		형식]
			클래스이름		변수이름;
			변수이름	=	new 클래스이름(); // Heap에 만들고 주소를 알려주는 것.
			Heap에 인스턴스를 만든다. (클래스 : 설계도 , 인스턴스 : 설계도를 사용 가능한 것으로 만드는 것.)
			
			레퍼런스변수(참조형변수)	+	인스턴스(Instance)	==> 객체(Object)

			여기서
			객체(Object)는 변수와 인스턴스를 합쳐서 객체라고 이야기 한다.
			인스턴스를 만들면 레퍼런스 변수로 불러와서 사용할 수 있다.
			000000000000000000000.
			
		
		예]
			Test라는 클래스가 존재한다면...
			
			Test t;
			
			t = new Test(); // t => 레퍼런스 변수,
							// t의 Heap Type은 Test가 된다.
			
			==>
				t	: 레퍼런스 변수
				t의 Heap Type은 Test가 된다.
				new 명령을 통해서 
				클래스가 Object가 되는데
				==> 컴퓨터가 물건을 만든다는 개념정도로 생각하자
					메모리에 클래스가 실행가능 한 것으로 올려졌다..
			
			그래서 Heap에 만들어진 클래스를 Instance(인스턴스)라고 부른다
			만들어진 Instance의 주소를 기억하는 변수를 Reference 라고 부른다.
			이 두개를 합쳐서 객제(Object)라고 부른다.
----------------------------------------------------------------------------------

객체 사용방법
	==> 객체를 사용한다는 것은 어떤 목적을 달성하기 위해서 필요한 데이터를 기억하거나
		목적을 달성하기 위해서 필요한 기능(함수)을 이용하는 것이다.
		
		사용방법 ] 
			주소. 변수;
			주소. 함수();
		예]
			
			class Test{
				int a;
				void abc(){}
			}
			
			==>
			
			Test t = new Test();
			
			t.a;
			t.abc();
			
			***
			자바에서는 소속을 밝혀줄 때 . 을 사용해서 처리를 한다.
		참고]
			클래스 하나당 오브젝트를 복수개 만들어도 상관없다.
			
			Test t = new Test();
			Test tt = new Test();
			
			==> new라는 명령으로 Heap영역에 Instance를 각각 만들어 놓은 상태고
				그 각각을 각각의 변수에 기억시켜놓은 상태가 된다.
				
				설계도 한장으로 문건을 여러개 만들어도 상관이 없을 것이고
				이때 주소를 이용해서 사용하게 되므로
				각각의 오브젝트는 별개로 독립되어서 실행 될 수 있다.
			
		참고]
			
			지역변수
				==> 해당 지역에서만 사용할 수 있는 변수
					그 문장이 모두 실행이 되는 순간 변수가 만들어지고
					그리고 그 블럭을 벗어나면 그 변수는 사라지게 된다.
					
			전역변수
				==> 모든 지역에서 사용할 수 있는 변수
					클래스 내부에 만들어진 변수( 멤버 변수 ) 를 전역 변수라고 한다.
					왜냐하면
					클래스 안에서 만들어진 변수는
					new를 시키는 순간 Heap영역에 만들어지기 때문에
					Heap 영역의 특성에 따라서 계속 사용할 수 있게 된다.
					
					탄생시점	- new 시키는 순간
					소멸시점	- 프로그램이 종료되는 순간 사라진다.
객체의 배열
	==> 하나의 클래스를 가지고 여러개의 오브젝트를 만들 수 있으므로
		배열로  만들어서 관리할 수 있게된다.
		
	만드는 방법]
		
		클래스이름[] 변수이름  = new 클래스이름[갯수];
		
		예]
			Test[] t1 = new Test[5];
			==> Test클래스를 배열로 관리할 주소를 기억하는 변수를 만들고
				아직 실질적으로 인스턴스(객체)는 만들지 않았다.
			
			//각 방에 인스턴스를 만들어 준다.
			t[0] = new Test();
			t[1] = new Test();
			t[2] = new Test();
			t[3] = new Test();
			t[4] = new Test();
			
	사용방법]
		
		>> 배열변수[위치].멤버  <<  의 형태로 접근해서 사용하면 된다.
		
	참고]
		클래스는 변수와 함수로 구성이 되어 있고 이 두개를 멤버라고 부른다.
		
		특별히 멤버중 변수를 멤버변수라 부르고 영어로 Field라 칭한다.
		  멤버함수는 클래스안에 만들어진 함수를 의미한다.
----------------------------------------------------------------

문제 1]
	
	원의 반지름, 둘레, 넓이를 저장할 클래스를 만들고
	그 클래스 객체 10개를 배열로 관리할 배열로 만들어서
	각 멤버를 초기화하고 출력하세요.
	단, 출력은 함수를 사용해서 출력하세요.
	
문제 2]
	
	10개의 과목의 점수를 입력할 배열을 만들고 (배열의 길이는 10으로 한다.)
	그 배열에 담긴 정수의
	총점, 평균을 구해서 출력해주는 프로그램을 작성하세요.
	단, 입력, 총점계산, 평균계산, 출력은 함수를 제작해서 처리하세요.

문제 3]
	
	학생의 이름, 국어, 영어, 수학, 물리, 코딩 과목의 점수를 저장하고
	총점, 평균을 계산해서 입력할 클래스를 제작하세요.
	단, 입력, 총점계산, 평균계산, 출력의 함수를 만들어서 출력하세요.
	그리고 5명의 학생을 배열로 만들어서 과목 점수, 이름을 입력해서
	출력하세요.
					*******************************************************
					*	dessert											  *
					*												      *
					*	최근 5년동안의 기온을 배열에 담아서 관리하려고 한다.				  *
					*	int[][] gion = new int[5][2];					  *
					*												      *
					*	로 만들고											  *
					*	첫번째 방에는 기온을 -20 ~ 40 까지 랜덤하게 입력하고			  *
					*	두번째 방에는 순위를 1~ 5까지 인덱스값으로 채워넣으세요.			  *
					*******************************************************
--------------------------------------------------------------------------------------------

함수의 오버로딩(OverLoading : 함수의 중첩)
==> 원칙적으로 같은 클래스내에서는 함수의 이름은 모두 달라야 한다.
	같은 클래스 안에서 같은 이름의 함수가 존재하면 에러가 발생한다.
	
	이러다보니 가독성에 있어서 문제가 발생된다.
	즉, 함수의 가독성이란?
	함수의 이름만 보고도 그 함수가 어떤 역할을 하는지 알아야 하는데
	함수의 이름을 모두 다르게 작성을 한다면
	가독성에 문제가 발생할 수 있다.
	
	이 문제를 해결하기 위해서 도입된 문법이
	함수의 오버로딩(OverLoading)이다.
	
	*****
	오버로딩이란?
		같은 클래스 안에 같은 이름의 함수를 만들 수 있다.
		단, 다음 조건은 반드시 지켜야 한다.
		
		규칙]
			0. 같은 이름의 함수가 클래스 내에 존재 해야 한다.
			1. 함수의 이름은 같아야 한다.
			2. 매개변수 리스트는 달라야 한다.
				==> 이말은, 갯수, 순서, 타입 중 하나 이상이 달라야 한다.
			3. 반환값 유형과는 전혀 상관이 없다.
			
		예 ]
			void abc(){
			}
			
			void abc(int a){
			}					==> 괜찮다.
			
			int abc(){
			}					==> 안 된다! 반환값에 관련된 규칙은 없다.
			
			void abc1(){{}	==> 된다. 오버로딩은 아니다.
			
			int	abc(float f){} ==> 된다.
			
			int abc(int a, int b) {} ==> 된다!
			
	결론]
		함수를 호출 할 때 정확한 함수를 선택할 수 있도록 해야한다.
		
	사용법]
		다른 사람이 만든 클래스에도 오버로딩이 구현된 함수를 볼 수 있따.
		
		이들 함수를 사용하는 방법
		
		원하는 기능을 하는 함수가 요구하는 데이터를 형태와 순서에 맞게 정확하게 입력해 줘야 한다.
		( 매개변수에 정의되어있는 변수는 그
		    타입으로 순서에 맞게 입력해주어야 한다. )
	
 	참고]
		  형태가 맞지 않더라도 사용할 수 있는 경우가 있는데
		 자동형변환이 되는 경우는 사용할 수 있다.
		 
		 예]
		 	
		 	void abd(double d){}
		 	
		 	==>
		 	abd(3.); 	==> 0
		 	abc(3f); 	==> 0
		 	abc('A');	==> 0
		 	abc(10); 	==> 0
---------------------------------------------------------------------------------

향상된 for 명령
 형식]
 	
 	for(데이터타입 변수이름 : 배열변수){}
 
---------------------------------------------------------------------------------

가변 인자
	==> 우리가 함수를 만들 때
		그 함수가 가지고 있는 매개변수와 동일한 갯수, 형태, 순서를 이용해서
		함수를 호출해야한다.
		
		void abc(int a){}        ==> abc(10);
		
		void abc(int a, int b){} ==> abc(10, 20);
		
-----------------------------------------------------------------------------
	사람의 이름을 입력해주면 그 사람들의 인원수를 카운트 해주는 함수
	
	public int getCnt(String[] name){
		return name.length;
	}
	
--------------------------------------------------------------------------
	위 경우 배열을 따로 준비해서 실행해줘야 할 것이다.
	만약, 배열을 준비 할 수 없다면?
***
	이처럼 데이터의 갯수를 지정할 수 없는 경우 매개변수로 사용할 수 있는 방법이
	가변 인수 이다.
	
	이것은 데이터의 갯수와 상관없이 모든 데이터를 다 받을 수 있도록 하는 것.
형식]

	[접근지정자] [속성] [반환값타입] 함수이름(데이터타입...변수이름){}

예]
	void abc(int...num){
		==> 데이터의 갯수와 상관없이 데이터를 입력받을 수 있다.
	}
	
	주의]
		가변인수 변수는 자동 배열 변수가 된다.(배열에 담겨진다는 말)
		
		따라서 사용할 때는 배열처럼 사용해야 한다.
	
	**
	주의 ]
	 	가변인수 앞에는 다른 매개변수가 와도 상관이 없지만
	 	가변인수 뒤에는 다른 매개변수가 오면 절대로 안된다.	

-------------------------------------------------------------

문제 4]
	 
	 학생의 점수를 입력하면 총점을 계산해주는 프로그램을 제작하세요.
	 
	 심화]
	 	랜덤하게 인수를 만들고
	 	그 인원수 만큼 점수를 랜덤하게 만들어서
	 	함수를 실행하게 하세요.
	
홈워크 1]
	학생의 이름, 국어, 영어, 수학, 물리, 코딩 점수를 관리하는 클래스를 제작하고
	학생의 데이터를 준비된 만큼만 입력해서
	전체 총점, 전체 평균을 구하는 프로그램을 가변인수를 사용해 만드세요